<?phpnamespace App\Auth\Domain;use function App\addLog;use  App\Auth\Model\Rule as ModelRule;use App\Common\CommonDomain;/** * 规则领域类 * * @author hms */class Rule{    private static $Model = null;    public function __construct()    {        if (self::$Model == null) {            self::$Model = new ModelRule();        }    }    /**获取规则列表     * @return array 数据对象     * @return array 数据对象[items] 数据项     * @return int 数据对象[count] 数据总数 用于分页     */    public function getList($param)    {        $rs = array('list' => array(), 'count' => 0);        $rs['count'] = self::$Model->getCount($param['keyWord']);        $rs['list'] = self::$Model->getList($param);        return $rs;    }    public function getLimitList($param)    {        $param = get_object_vars($param);		        $rs = array('list' => array(), 'count' => 0);	        $rs['count'] = ceil(self::$Model->getLimitCount($param['keyWord'],$param['auth_rule_pid'])/$param['limitCount']);        $rs['list'] = self::$Model->getLimitList($param);        return $rs;    }		public function getAdminAuthList(){		$where="auth_rule_status=1";		$field="*";		$data=self::$Model->getallDataAuth($where,$field);		return $data;	}    /**添加规则     * @param $apiObj api对象     * @return int 成功返回0，失败返回1，标识重复返回2，     */    public function addRule($apiObj)    {    	$result['result']='-1';		$result['msg']='失败';        $param = get_object_vars($apiObj);        //检查规则标识是否重复，重复返回2        $r = self::$Model->checkRepeat($param['auth_rule_name']);        if ($r){			$result['msg']='当前规则已存在';			return $result;		}        //成功返回0，失败返回2        //1.获取数图；        if($param['ico']==null || $param['ico']==NULL){        	$param['ico']='';        }        $obj=new CommonDomain();		if($param['ico']){    		$param['ico']=$obj->upload_image_bsae64_single($param['ico']);		}		        $r = self::$Model->addRule($param);		if($r==true){			$result['result']='1';			$result['msg']='成功';		}		return $result;     //   return $r == true ? 0 : 1;    }    /**修改规则     * @param $apiObj     * @return int 成功返回0，失败返回1，名称重复返回2     */    public function editRule($apiObj)    {    	$result['msg']='失败';		$result['result']='-1';        $param = get_object_vars($apiObj);        //检查名称重复，重复返回2        $r = self::$Model->checkRepeat($param['auth_rule_name'], $param['id']);        if ($r){			$result['msg']='当前规则已存在';			return $result;		}		if($param['ico']){			$server=$_SERVER['HTTP_HOST'];			if(!stripos($param['ico'],$server)){				$param['ico']=$obj->upload_image_bsae64_single($param['ico']);			}		}	        $r = self::$Model->editRule($param['id'], $param);        if ($r) {            $id = $param['id'];            addLog("编辑权限规则，编号：$id");			$result['result']='1';			$result['msg']='成功';        }		return $result;            }    /** 删除规则     * @param $ids id列表 如1,2,3     * @return int     */    public function delRule($ids)    {    	$result['result']='-1';		$result['msg']='失败';        $r = self::$Model->delRule($ids);        if ($r) {          //  $ids = json_encode($this->ids);            addLog("删除权限规则，编号：$ids");			$result['result']='1';			$result['msg']='成功';        }		        return $r == true ? 0 : 1;    }    /** 获取单个规则信息     * @param $id     * @return mixed     */    public function getInfo($id)    {        $r = self::$Model->getInfo($id);        return $r;    }    public function getRulesInGroups($gids)    {    	 $rules = self::$Model->getRulesInGroups($gids);		/*         if (\PhalApi\DI()->cache === null) {            $rules = self::$Model->getRulesInGroups($gids);        } else {            $rules = self::$Model->getRulesInGroupsCache($gids);        }		*/        return $rules;    }}